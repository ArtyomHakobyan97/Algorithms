#include <vector>
#include <string>
#include <iostream>
#include <algorithm>
#include <time.h>

using namespace std;

// Matrix Mi has sizes (N[i]xN[i+1]).
int N[1001];
int M;
int D[1001][1001];

int chain_multiply(int st, int end) {
	if (st == end)
		return 0;
	// If I already have the answer!
	if (D[st][end] != 0) {
		return D[st][end];
	}
	int min_value = 100000000;
	for (int k = st; k < end - 1; ++k) {
		int candidate = chain_multiply(st, k) + 
			chain_multiply(k + 1, end) + 
			N[st] * N[k] * N[end];
		if (min_value > candidate)
			min_value = candidate;
	}
	D[st][end] = min_value;
	return min_value;
}

int main() {
	cin >> M;
	for (int i = 1; i <= M + 1; ++i) {
		cin >> N[i];
	}
	cout << chain_multiply(1, M) << endl;
	return 0;
}

/*
5 17
2 4 6 8 10
*/